---
# create namespace
apiVersion: v1
kind: Namespace
metadata:
  name: aws-otel-eks-daemonset
  labels:
    name: aws-otel-eks-daemonset
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-otel-conf
  namespace: aws-otel-eks-daemonset
  labels:
    app: aws-otel
    component: aws-otel-conf
data:
  aws-otel-config: |
    extensions:
      health_check:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:55680"
    exporters:
      awsxray:
      awsemf:

    service:
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [awsxray]
        metrics:
          receivers: [otlp]
          exporters: [awsemf]
      extensions: [health_check]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aws-otel-collector-daemonset
  namespace: aws-otel-eks-daemonset
  labels:
    app: aws-otel
    component: aws-otel-collector
spec:
  selector:
    matchLabels:
      app: aws-otel
      component: aws-otel-collector
  template:
    metadata:
      labels:
        app: aws-otel
        component: aws-otel-collector
    spec:
      containers:
        - command:
            - "/awscollector"
            - "--config=/conf/aws-otel-config.yaml"
            - "--log-level=DEBUG"
          env:
            - name: AWS_REGION
              value: 'us-west-2'
          name: aws-otel-collector
          image: amazon/aws-otel-collector:latest
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 55680 # Default OpenTelemetry receiver port.
              hostPort: 55680
            - containerPort: 8888  # Metrics.
              hostPort: 8888
          volumeMounts:
            - name: aws-otel-config-vol
              mountPath: /conf
          livenessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
          readinessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
      volumes:
        - configMap:
            name: aws-otel-conf
            items:
              - key: aws-otel-config
                path: aws-otel-config.yaml
          name: aws-otel-config-vol
---
# create deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-otel-sample-app
  namespace: aws-otel-eks-daemonset
  labels:
    name: aws-otel-sample-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: aws-otel-sample-app
  template:
    metadata:
      labels:
        name: aws-otel-sample-app
    spec:
      containers:
        - name: aws-otel-sample-app
          image: "aottestbed/aws-otel-collector-sample-app:java-0.1.0"
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "$(HOST_IP):55680"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.namespace=AWSObservability,service.name=CloudWatchEKSService"
            - name: S3_REGION
              value: 'us-west-2'
          imagePullPolicy: Always